{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "MSPR dev : Pharmacie database",
      "description": "API exposing CRUD operation to target pharmacie database"
    },
    "host": "http://127.0.0.1:3000",
    "basePath": "/api",
    "tags": [
      {
        "name": "Pharmacie-api",
        "description": "API for CRUD operation on pharmacie database"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/pharmacies": {
        "post": {
          "tags": [
            "Pharmacie"
          ],
          "summary": "save pharmacie to database",
          "description": "Create new pharmacie",
          "parameters": [
            {
              "name": "pharmacie",
              "in": "body",
              "description": "Pharmacie that we want to create",
              "schema": {
                "$ref": "#/definitions/harmacie"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Pharmacie successfuly added !",
              "schema": {
                "$ref": "#/definitions/Pharmacie"
              }
            }
          }
        },
        "get": {
          "tags": [
            "Pharmacie"
          ],
          "summary": "Get all pharmacies in database",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Pharmacie"
              }
            }
          }
        }
      },
      "/pharmacies/{pharmacieId}": {
        "parameters": [
          {
            "name": "pharmacieId",
            "in": "path",
            "required": true,
            "description": "ID of pharmacie that we want to find",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Pharmacie"
          ],
          "summary": "Get pharmacie with given ID",
          "responses": {
            "200": {
              "description": "pharmacie found",
              "schema": {
                "$ref": "#/definitions/Pharmacie"
              }
            }
          }
        },
        "delete": {
          "summary": "Delete pharmcacie with given ID",
          "tags": [
            "Pharmacie"
          ],
          "responses": {
            "200": {
              "description": "Pharmacie deleted",
              "schema": {
                "$ref": "#/definitions/Pharmacie"
              }
            }
          }
        },
        "put": {
          "summary": "Update pharmacie with given ID",
          "tags": [
            "Pharmacie"
          ],
          "parameters": [
            {
              "name": "pharmacie",
              "in": "body",
              "description": "Pharmacie with new values of properties",
              "schema": {
                "$ref": "#/definitions/Pharmacie"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Pharmacie updated",
              "schema": {
                "$ref": "#/definitions/Pharmacie"
              }
            }
          }
        }
      },
      "/localisation": {
        "get": {
          "tags": [
            "Pharmacie"
          ],
          "summary":"find pharmacies around gps coordinates specified in query params",
          "description": "parameters to found pharmacies near the lattitude and longitude parameters ",
          "parameters": [
            {
              "name": "long",
              "in": "query",
              "description": "longitude",
              "type": "number",
              "format": "float",
              "schema": {
                "$ref": "#/definitions/Pharmacie"
              }
            },
            {
              "name": "latt",
              "in": "query",
              "description": "lattitude",
              "type": "number",
              "format": "float",
              "schema": {
                "$ref": "#/definitions/Pharmacie"
              }
            },
            {
              "name": "perim",
              "in": "query",
              "description": "perimeter of the research in km",
              "type": "number",
              "format": "float",
              "schema": {
                "$ref": "#/definitions/Pharmacie"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Pharmacie found !",
              "schema": {
                "$ref": "#/definitions/Pharmacie"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "Pharmacie": {
        "required": [
          "_id",
          "name"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "auto-generated": true
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type":"object",
            "properties":{
              "nbr" : {
                "type": "number"
              },
              "street" : {
                "type" : "string"
              },
              "zipCode" :{
                "type": "number"
              },
              "city" : {
                "type": "string"
              }
            }
          },
          "turnover": {
            "type": "number",
            "format": "float"
          },
          "traningNeed": {
            "type": "string"
          },
          "productBought": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productName": {
                  "type": "string"
                },
                "quantityBoughtPerMonth":{
                  "type": "number",
                  "format": "float"
                },
                "price": {
                  "type": "number",
                  "format": "float"
                }
              }
            }       
          },
          "gpsCoordinate [long, latt]": {
            "type": "array",
            "items":{
              "type": "number",
              "format": "float"
            },
            "minItems": 2,
            "maxItems": 2
          }
        }
      }
    }
  }